#!/usr/bin/env ruby
#
# This script fetches information of bioruby gems by querying the gem
# tool and outputs a list of projects as JSON
#
#   ./bin/gem_list.rb            > data/gem_list_biogems.json
#   ./bin/gem_list.rb --rubygems > data/gem_list_rubygems.json

$: << "lib"

require 'json'

$is_debug = ARGV.index('--debug')  
is_testing = ARGV.index('--test')  
is_rubygems = ARGV.index('--rubygems')
is_biogems = !is_rubygems

# We fetch all gems automatically that start with bio- (bio dash). 
# This is the list of biogems not starting with bio- (bio dash) - actually this should move to 
# /etc!
# ADD = %w{ }

$stderr.print "# testing!!\n" if is_testing
# print "# testing!!\n" if is_testing
# print "# rubygems!!\n" if is_rubygems
# print "# Generated by #{__FILE__} #{Time.now}\n"
# print "# Using Ruby ",RUBY_VERSION,"\n"

projects = Hash.new

# Set up the search using a local gem tool
$stderr.print "Querying gem list\n" if $is_debug
list = []
if is_biogems
  # We re-read the last information from the resident YAML file.
  if is_testing
    list = ['bio-logger', 'bio-table']
  else
    list = `gem list -r --no-versions bio-`.split(/\n/)
    prerelease = `gem search -r --prerelease --no-versions bio-`.split(/\n/)
    list += prerelease
    # list += ADD
    list += Dir.glob("./etc/biogems/*.yaml").map { |fn| File.basename(fn).sub(/.yaml$/,'') }
  end
end

if is_rubygems
  list = if not is_testing
           Dir.glob("./etc/rubygems/*.yaml").map { |fn| File.basename(fn).sub(/.yaml$/,'') }
         else
           [ 'sciruby' ]
         end
end

puts list.to_json
